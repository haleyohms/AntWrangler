functionsPath = "C:/Users/HaleyOhms/Documents/GitHub/AntWrangler/pit_tag_data_compile_functions.r"
dataDir = "C:/Users/HaleyOhms/Documents/GitHub/AntWrangler/example"
dbDir = "C:/Users/HaleyOhms/Documents/GitHub/AntWrangler/example"
source(functionsPath)
PITcompile(dataDir, dbDir)
rm(list=ls())
require(dplyr)
require(tidyverse)
require(lubridate)
require(xlsx)
require(ggplot2)
# Main fish data file
AFD<-read_csv("C:/Users/HaleyOhms/Documents/Carmel/DATA/Database/AllFishData.csv", col_names = T,
col_types = cols(SiteID = "c", Date = col_date(), Pass = "d", FishNum = "d",
FL_mm = "d", Wt_g = "d", PITnum = "c", Recap = col_logical(),
TagSize = "i", DNAsamp = col_logical(), Notes = "c", SiteTo = "c",
Scales = "l", Species = "c", Sex = "c"))
dir = "C:/Users/HaleyOhms/Documents/Carmel/DATA/NMFS_Data/TaggingHabitatScouting/2019/POP Surveys 2019/PIT Tagging"
files = list.files(dir, '*.xlsx', recursive = F, full.names = TRUE)
bnames = basename(files)
bnames = sub('.xlsx', '',bnames)
for(i in 1:length(files)){
tbl = read.xlsx2(files[i], sheetIndex = 1, startRow = 1,
colClasses = c("character","Date", "numeric", "numeric", "numeric", "numeric",
"character","numeric", "character", "character", "character", "character", "character"),
stringsAsFactors=FALSE)
if(i == 1){
fallpop = tbl
} else{
fallpop = rbind(fallpop, tbl)
}
}
colnames(fallpop) <- c("SiteID", "Date", "FishNum", "Pass", "FL_mm", "Wt_g", "PITnum", "TagSize", "TagorNot",
"DNAsamp", "Scales", "Recap","Notes")
fallpop<-fallpop[!fallpop$SiteID=="" , ] #remove blank columns; thanks excel... not
fallpop<-fallpop[!fallpop$SiteID==" " , ]
fallpop$DNAsamp <- fallpop$DNAsamp=="Y" | fallpop$DNAsamp=="T"
fallpop$Scales <- fallpop$Scales=="Y" | fallpop$Scales=="T"
fallpop$Recap <- fallpop$Recap=="Y" | fallpop$Recap=="T"
fallpop$Sex<-NA
fallpop$Species<-"Om"
fallpop$SiteTo<-NA
fallpop$TagorNot<-NULL
fallpop$TagSize <- as.integer(fallpop$TagSize)
fallpop$PITnum = as.character(sub(" ", "", fallpop[,"PITnum"])) # Remove space from PITnum
#... error on site 6 date
fallpop$Date[(fallpop$Date=="2018-09-05" & fallpop$SiteID=="6")] <- "2019-09-05"
fallpop$Date[(is.na(fallpop$Date) & fallpop$SiteID=="Boronda")] <- "2019-10-02"
#... Clean up morts
fallpop$Notes[fallpop$Notes=="MORT, NO EYES"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT"] <- "Mort"
fallpop$Notes[fallpop$Notes=="Mort. Side channel"] <- "Mort"
fallpop$Notes[fallpop$Notes=="Mort. Main channel"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT; tag removed"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT, no DNA sample"] <- "Mort"
fallpop$Notes[fallpop$Notes=="Drew blood-- MORT, body discarded, tag retrieved"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT, body discarded, tag retrieved"] <- "Mort"
fallpop$Notes[fallpop$Notes=="No tag, health concerns; MORT"] <- "Mort"
fallpop$Notes[fallpop$Notes=="Mort, no tag or scales"] <- "Mort"
fallpop$Notes[fallpop$Notes=="mort"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT / E-FISHING SCAR"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT, EFISHING SCAR"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT, E-FISHING SCAR"] <- "Mort"
#... Clean up tag numbers
fallpop$PITnum[fallpop$PITnum=="NaN"] <- NA
fallpop$PITnum[fallpop$PITnum==""] <- NA
## Deal with duplicates
Tdat <- filter(fallpop, Recap==F, !is.na(PITnum)) #Non-recaps
dupTags <- Tdat[which(duplicated(Tdat$PITnum)==T) , ]
idx <- duplicated(Tdat$PITnum) | duplicated(Tdat$PITnum, fromLast = TRUE)
AlldupTags <- Tdat[idx, ]
dir = "C:/Users/HaleyOhms/Documents/Carmel/DATA/NMFS_Data/TaggingHabitatScouting/2019/POP Surveys 2019/PIT Tagging"
files = list.files(dir, '*.xlsx', recursive = F, full.names = TRUE)
bnames = basename(files)
bnames = sub('.xlsx', '',bnames)
for(i in 1:length(files)){
tbl = read.xlsx2(files[i], sheetIndex = 1, startRow = 1,
colClasses = c("character","Date", "numeric", "numeric", "numeric", "numeric",
"character","numeric", "character", "character", "character", "character", "character"),
stringsAsFactors=FALSE)
if(i == 1){
fallpop = tbl
} else{
fallpop = rbind(fallpop, tbl)
}
}
dir = "C:/Users/HaleyOhms/Documents/Carmel/DATA/NMFS_Data/TaggingHabitatScouting/2019/POP Surveys 2019/PIT Tagging"
files = list.files(dir, '*.xlsx', recursive = F, full.names = TRUE)
bnames = basename(files)
bnames = sub('.xlsx', '',bnames)
for(i in 1:length(files)){
tbl = read.xlsx2(files[i], sheetIndex = 1, startRow = 1,
colClasses = c("character","Date", "numeric", "numeric", "numeric", "numeric",
"character","numeric", "character", "character", "character", "character", "character"),
stringsAsFactors=FALSE)
if(i == 1){
fallpop = tbl
} else{
fallpop = rbind(fallpop, tbl)
}
}
colnames(fallpop) <- c("SiteID", "Date", "FishNum", "Pass", "FL_mm", "Wt_g", "PITnum", "TagSize", "TagorNot",
"DNAsamp", "Scales", "Recap","Notes")
fallpop<-fallpop[!fallpop$SiteID=="" , ] #remove blank columns; thanks excel... not
fallpop<-fallpop[!fallpop$SiteID==" " , ]
fallpop$DNAsamp <- fallpop$DNAsamp=="Y" | fallpop$DNAsamp=="T"
fallpop$Scales <- fallpop$Scales=="Y" | fallpop$Scales=="T"
fallpop$Recap <- fallpop$Recap=="Y" | fallpop$Recap=="T"
fallpop$Sex<-NA
fallpop$Species<-"Om"
fallpop$SiteTo<-NA
fallpop$TagorNot<-NULL
fallpop$TagSize <- as.integer(fallpop$TagSize)
fallpop$PITnum = as.character(sub(" ", "", fallpop[,"PITnum"])) # Remove space from PITnum
#... error on site 6 date
fallpop$Date[(fallpop$Date=="2018-09-05" & fallpop$SiteID=="6")] <- "2019-09-05"
fallpop$Date[(is.na(fallpop$Date) & fallpop$SiteID=="Boronda")] <- "2019-10-02"
#... Clean up morts
fallpop$Notes[fallpop$Notes=="MORT, NO EYES"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT"] <- "Mort"
fallpop$Notes[fallpop$Notes=="Mort. Side channel"] <- "Mort"
fallpop$Notes[fallpop$Notes=="Mort. Main channel"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT; tag removed"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT, no DNA sample"] <- "Mort"
fallpop$Notes[fallpop$Notes=="Drew blood-- MORT, body discarded, tag retrieved"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT, body discarded, tag retrieved"] <- "Mort"
fallpop$Notes[fallpop$Notes=="No tag, health concerns; MORT"] <- "Mort"
fallpop$Notes[fallpop$Notes=="Mort, no tag or scales"] <- "Mort"
fallpop$Notes[fallpop$Notes=="mort"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT / E-FISHING SCAR"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT, EFISHING SCAR"] <- "Mort"
fallpop$Notes[fallpop$Notes=="MORT, E-FISHING SCAR"] <- "Mort"
#... Clean up tag numbers
fallpop$PITnum[fallpop$PITnum=="NaN"] <- NA
fallpop$PITnum[fallpop$PITnum==""] <- NA
## Deal with duplicates
Tdat <- filter(fallpop, Recap==F, !is.na(PITnum)) #Non-recaps
dupTags <- Tdat[which(duplicated(Tdat$PITnum)==T) , ]
idx <- duplicated(Tdat$PITnum) | duplicated(Tdat$PITnum, fromLast = TRUE)
AlldupTags <- Tdat[idx, ]
#write.csv(AlldupTags, "C:/Users/HaleyOhms/Documents/Carmel/Data Deliveries/DupTags.csv")
fallpop$PITnum[fallpop$PITnum=="na"] <- NA
fallpop$Notes[fallpop$PITnum=="900226001046800"] <- "Tag #900226001046800, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900226001046800"] <- NA
fallpop$Notes[fallpop$PITnum=="900226001046839"] <- "Tag #900226001046839, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900226001046839"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633625"] <- "Tag #900228000633625, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633625"] <- NA
fallpop$Recap[fallpop$PITnum=="900226001046024" & fallpop$SiteID=="Scarlett" ] <- T
fallpop$Recap[fallpop$PITnum=="900226001046040" & fallpop$SiteID=="Scarlett" ] <- T
fallpop$Recap[fallpop$PITnum=="900226001046716" & fallpop$SiteID=="Scarlett" ] <- T
fallpop$Notes[fallpop$PITnum=="900228000633208"] <- "Tag #900228000633208, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633208"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633600"] <- "Tag #900228000633600, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633600"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633610"] <- "Tag #900228000633610, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633610"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633634"] <- "Tag #900228000633634, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633634"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633636"] <- "Tag #900228000633636, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633636"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633629"] <- "Tag #900228000633629, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633629"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633605"] <- "Tag #900228000633605, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633605"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633613"] <- "Tag #900228000633613, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633613"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633622"] <- "Tag #900228000633622, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633622"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633638"] <- "Tag #900228000633638, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633638"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633640"] <- "Tag #900228000633640, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633640"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633650"] <- "Tag #900228000633650, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633650"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633652"] <- "Tag #900228000633652, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633652"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633654"] <- "Tag #900228000633654, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633654"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633658"] <- "Tag #900228000633658, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633658"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633660"] <- "Tag #900228000633660, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633660"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633663"] <- "Tag #900228000633663, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633663"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633670"] <- "Tag #900228000633670, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633670"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633678"] <- "Tag #900228000633678, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633678"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633679"] <- "Tag #900228000633679, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633679"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633684"] <- "Tag #900228000633684, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633684"] <- NA
fallpop$Notes[fallpop$PITnum=="900228000633685"] <- "Tag #900228000633685, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000633685"] <- NA
fallpop$Recap[fallpop$PITnum=="900228000633696" & fallpop$SiteID=="Stone Cabin" ] <- T
fallpop$Notes[fallpop$PITnum=="900228000689180"] <- "Tag #900228000689180, duplicate, removed"
fallpop$PITnum[fallpop$PITnum=="900228000689180"] <- NA
#... Tag size errors
fallpop$TagSize[fallpop$SiteID=="UP CDFW 2" & fallpop$FishNum=="43"] <- "12"
fallpop$TagSize[fallpop$SiteID=="Boronda" & fallpop$FishNum=="150" ] <- "23"
fallpop$TagSize[fallpop$SiteID=="Finch" & fallpop$FishNum=="43" ] <- "12"
fallpop$TagSize[fallpop$SiteID=="Hastings" & fallpop$FishNum=="210" ] <- "12"
fallpop$TagSize[fallpop$SiteID=="Hastings" & fallpop$FishNum=="258" ] <- "12"
fallpop$TagSize[fallpop$SiteID=="Red Rock" & fallpop$FishNum=="43" ] <- "23"
fallpop$TagSize[fallpop$SiteID=="Red Rock" & fallpop$FishNum=="69" ] <- "23"
fallpop$TagSize[fallpop$SiteID=="CDFW 3" & fallpop$FishNum=="9" ] <- "12"
fallpop$TagSize[fallpop$SiteID=="CDFW 3" & fallpop$FishNum=="10" ] <- "12"
#
#   #... DATA FRAME OF DUPLICATE TAGS
# AlldupTags <- AlldupTags[order(AlldupTags$PITnum, AlldupTags$Date),]
# #... dataframe saved as .csv
# write_csv(AlldupTags, "C:/Users/HaleyOhms/Documents/Carmel/Database/DuplicateTagData.csv", append = T)
#... combine the rst and AFD data
AFD <- rbind(AFD, fallpop)
AFD <- distinct(AFD, SiteID, Date, FishNum, FL_mm, Wt_g, PITnum, TagSize, DNAsamp, Recap, .keep_all=T)
AFD$PITnum[AFD$PITnum=="na"] <- NA
write_csv(AFD,"C:/Users/HaleyOhms/Documents/Carmel/DATA/Database/AllFishData.csv")
